# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import receta_pb2 as receta__pb2


class RecetasStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AltaReceta = channel.unary_unary(
                '/Recetas/AltaReceta',
                request_serializer=receta__pb2.Receta.SerializeToString,
                response_deserializer=receta__pb2.Responsea.FromString,
                )
        self.EditarReceta = channel.unary_unary(
                '/Recetas/EditarReceta',
                request_serializer=receta__pb2.RecetaEditar.SerializeToString,
                response_deserializer=receta__pb2.Responsea.FromString,
                )
        self.TraerRecetas = channel.unary_stream(
                '/Recetas/TraerRecetas',
                request_serializer=receta__pb2.NuloReceta.SerializeToString,
                response_deserializer=receta__pb2.Receta.FromString,
                )
        self.TraerRecetasPorUsuario = channel.unary_stream(
                '/Recetas/TraerRecetasPorUsuario',
                request_serializer=receta__pb2.Usuariolog.SerializeToString,
                response_deserializer=receta__pb2.Receta.FromString,
                )


class RecetasServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AltaReceta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditarReceta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TraerRecetas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TraerRecetasPorUsuario(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RecetasServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AltaReceta': grpc.unary_unary_rpc_method_handler(
                    servicer.AltaReceta,
                    request_deserializer=receta__pb2.Receta.FromString,
                    response_serializer=receta__pb2.Responsea.SerializeToString,
            ),
            'EditarReceta': grpc.unary_unary_rpc_method_handler(
                    servicer.EditarReceta,
                    request_deserializer=receta__pb2.RecetaEditar.FromString,
                    response_serializer=receta__pb2.Responsea.SerializeToString,
            ),
            'TraerRecetas': grpc.unary_stream_rpc_method_handler(
                    servicer.TraerRecetas,
                    request_deserializer=receta__pb2.NuloReceta.FromString,
                    response_serializer=receta__pb2.Receta.SerializeToString,
            ),
            'TraerRecetasPorUsuario': grpc.unary_stream_rpc_method_handler(
                    servicer.TraerRecetasPorUsuario,
                    request_deserializer=receta__pb2.Usuariolog.FromString,
                    response_serializer=receta__pb2.Receta.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Recetas', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Recetas(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AltaReceta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Recetas/AltaReceta',
            receta__pb2.Receta.SerializeToString,
            receta__pb2.Responsea.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EditarReceta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Recetas/EditarReceta',
            receta__pb2.RecetaEditar.SerializeToString,
            receta__pb2.Responsea.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TraerRecetas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/Recetas/TraerRecetas',
            receta__pb2.NuloReceta.SerializeToString,
            receta__pb2.Receta.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TraerRecetasPorUsuario(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/Recetas/TraerRecetasPorUsuario',
            receta__pb2.Usuariolog.SerializeToString,
            receta__pb2.Receta.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
