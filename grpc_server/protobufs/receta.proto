syntax = "proto3";

message Receta {
    int32 idreceta = 1;
    string titulo = 2;
    string descripcion = 3;
    int32 tiempoPreparacion = 4;
    string ingredientes = 5;
    string pasos = 6; 
    repeated string url_fotos = 7;
    string usuario_user = 8;
    string nombreCategoria = 9;
    int32 recetaPopular = 10;
    int32 puntuacion = 11;
    int32 cantPuntuacion = 12;
    
}

message RecetaEditar {
    int32 idreceta = 1;
    string titulo = 2;
    string descripcion = 3;
    int32 tiempoPreparacion = 4;
    string ingredientes = 5;
    string pasos = 6; 
    repeated string url_fotos = 7;
    string nombreCategoria = 9;
    int32 recetaPopular = 10;
    int32 puntuacion = 11;
    int32 cantPuntuacion = 12;
}
message NuloReceta {
}

message Responsea {
    string message = 1;
    int32 idreceta = 2;
}



message RecetaList {
    repeated Receta recetas = 1;
}

message Usuariolog{
    string usu = 1;
}

message tiempo{
    int32 desde = 1;
    int32 hasta = 2;
}

message RecetaId {
    int32 idreceta = 1;
}

message Prommmm {
    float promedio = 1;
}

message Puntua {
    int32 idreceta = 1;
    int32 puntuacion = 2;
}

service Recetas {
    rpc AltaReceta(Receta) returns (Responsea);
    rpc EditarReceta(RecetaEditar) returns (Responsea);
    rpc TraerRecetas(NuloReceta) returns (stream Receta);
    rpc TraerRecetaPorId(RecetaId) returns (Receta);
    rpc TraerRecetasPorUsuario(Usuariolog) returns (stream Receta);
    rpc TraerRecetasPorCategoria(Usuariolog) returns (stream Receta);
    rpc TraerRecetasPorTitulo(Usuariolog) returns (stream Receta);
    rpc TraerRecetasPorTiempo(tiempo) returns (stream Receta);
    rpc TraerRecetasPorIngredientes(Usuariolog) returns (stream Receta);
    rpc TraerRecetasPopulares(NuloReceta) returns (stream Receta);
    rpc AgregarPuntuacion(Puntua) returns (NuloReceta);
    rpc TraerPromedioPuntuacion(RecetaId) returns (Prommmm);
}
